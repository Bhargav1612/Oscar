
import React from 'react';
import { Body, Title } from '@vxx/buttons'; // Ensure using the pre-built Button and Title components
import styled from 'styled-components';
import { domainurl } from '../../helper';
import { formImageurl } from '../auto/utils';
import { Carousel } from "@vds/carousels"; // Using Carousel component from your imports

const OuterDiv = styled.div`
  padding: 16px 24px;
  border: 1px 0px 1px 0px;
  display: flex;
  justify-content: space-between;
`;

const TileContainer = styled.div`
  display: flex;
  flex-direction: row;  /* Align the content (text) and image in a row */
  justify-content: space-between;
  height: 300px;        /* Set fixed height for the tile */
  background-color: white;
  border-radius: 12px;
  padding: 16px;
  box-sizing: border-box;
  cursor: pointer;
`;

const ContentWrapper = styled.div`
  flex-grow: 1;  /* Allow content to take up remaining space */
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding-right: 16px;  /* Prevent text from touching the image */
`;

const ImageWrapper = styled.div`
  width: 150px;  /* Set a fixed width for the image */
  height: 100%;  /* Ensure the image's height matches the tile's height */
  display: flex;
  justify-content: center;
  align-items: center;
`;

const myClickABC = (props) => {
  const { mtn, imageurl, productname, currentname, currentbrand, amount } = props;
  const buttonname = "Update";
  const handleClick = () => {
    window.location.href = `${domainurl(window.location.hostname)}/${props.reccomendUrl}?intent=EUP&nHash=${props.processMtn.slice(-4)}&entrypoint=SRCH`;
  };
  const url = formImageurl(imageurl, 'light');

  const data = [
    {
      eyebrow: {
        size: "bodyLarge",
        children: "first"
      },
      title: {
        size: "titleSmall",
        primitive: 'h1',
        children: "second"
      },
      badge: {
        children: "third"
      },
      subtitle: {
        size: "titleSmall",
        primitive: 'h1',
        children: "fourth"
      },
      img: {
        src: url,
      },
      buttonData: [
        {
          children: "Click",
          size: "large",
          use: "secondary",
          onClick: () => alert("Button clicked"),
        }
      ],
      ariaLabel: "tile label"
    },
    // Add more data items here...
  ];

  return (
    <OuterDiv>
      <div>
        <div className="update-container">
          <div className="update-title">
            <Title size="large" bold>
              Update to {productname}
            </Title>
          </div>
          {mtn && (
            <Body size="large" color="#000000">
              Hi here you can use ${amount} for {currentbrand} for {mtn.slice(0, 3)}-{mtn.slice(3, 6)}-{mtn.slice(6)}
            </Body>
          )}
        </div>

        {/* Carousel Component */}
        <div className="carousel">
          <Carousel
            peek="standard"
            layout="1UP"  // Layout changed to 1UP as per your request
            gutter="24px"
            surface="light"
            paginationInset="12px"
            paginationDisplay="onHover"
            data={data}
            renderItem={({ eyebrow, title, badge, subtitle, img, buttonData, id, ariaLabel }) => (
              <TileContainer key={id} aria-label={ariaLabel}>
                {/* Left Section (Text content) */}
                <ContentWrapper>
                  {/* Eyebrow Text (Styled using pre-existing component) */}
                  <Body size={eyebrow.size} color="grey">
                    {eyebrow.children}
                  </Body>

                  {/* Badge (Styled as a red badge) */}
                  <div
                    style={{
                      backgroundColor: 'red',
                      color: 'white',
                      padding: '4px 8px',
                      borderRadius: '8px',
                      fontSize: '12px',
                      alignSelf: 'flex-start',
                    }}
                  >
                    {badge.children}
                  </div>

                  {/* Title (Styled with pre-existing component) */}
                  <Title size={title.size} primitive={title.primitive} bold>
                    {title.children}
                  </Title>

                  {/* Subtitle */}
                  <Body size={subtitle.size} primitive={subtitle.primitive} color="grey">
                    {subtitle.children}
                  </Body>

                  {/* Button Group (Using pre-existing Button component) */}
                  {buttonData && (
                    <div>
                      {buttonData.map((button, index) => (
                        <button
                          key={index}
                          onClick={button.onClick}
                          style={{
                            padding: '8px 16px',
                            fontSize: '14px',
                            marginTop: '8px',
                            backgroundColor: button.use === "secondary" ? 'gray' : 'blue',
                            color: 'white',
                            borderRadius: '4px',
                          }}
                        >
                          {button.children}
                        </button>
                      ))}
                    </div>
                  )}
                </ContentWrapper>

                {/* Right Section (Image) */}
                <ImageWrapper>
                  {img && <img alt={title.children} src={img.src} style={{ width: '100%', height: 'auto', objectFit: 'cover', borderRadius: '8px' }} />}
                </ImageWrapper>
              </TileContainer>
            )}
          />
        </div>
      </div>
    </OuterDiv>
  );
};

export default myClickABC;



import React from 'react';
import { Body, Title } from '@vxx/buttons';
import styled from 'styled-components';
import { domainurl } from '../../helper';
import { formImageurl } from '../auto/utils';
import { Carousel } from "@vds/carousels"; // Assuming you have this import for the Carousel component

const OuterDiv = styled.div`
  padding: 16px 24px;
  border: 1px 0px 1px 0px;
  display: flex;
  justify-content: space-between;

  & .update-title {
    padding: 16px 0px 10px 0px;
  }

  & .update-button {
    padding: 1.2rem 0 1.2rem 0;
  }

  & .myClick-update-img {
    height: 172px;
  }

  @media (max-width: 768px) {
    & .myClick-update-img {
      display: none;
    }
  }
`;

const myClickABC = (props) => {
  const { mtn, imageurl, productname, currentname, currentbrand, amount } = props;
  const buttonname = "Update";
  const handleClick = () => {
    window.location.href = `${domainurl(window.location.hostname)}/${props.reccomendUrl}?intent=EUP&nHash=${props.processMtn.slice(-4,)}&entrypoint=SRCH`;
  };
  const url = formImageurl(imageurl, 'light');

  const data = [
    {
      eyebrow: {
        size: "bodyLarge",
        children: "first"
      },
      title: {
        size: "titleSmall",
        primitive: 'h1',
        children: "second"
      },
      badge: {
        children: "third"
      },
      subtitle: {
        size: "titleSmall",
        primitive: 'h1',
        children: "fourth"
      },
      img: {
        src: url,
      },
      buttonData: [
        {
          children: "Click",
          size: "large",
          use: "secondary",
          onClick: () => alert("Button clicked"),
        }
      ],
      ariaLabel: "tile label"
    },
    // Add more data items here...
  ];

  return (
    <OuterDiv>
      <div>
        <div className="update-container">
          <div className="update-title">
            <Title size="large" bold>
              Update to {productname}
            </Title>
          </div>
          {mtn && (
            <Body size="large" color="#000000">
              Hi here you can use ${amount} for {currentbrand} for {mtn.slice(0, 3)}-{mtn.slice(3, 6)}-{mtn.slice(6)}
            </Body>
          )}
        </div>

        {/* Carousel Component */}
        <div className="carousel">
          <Carousel
            peek="standard"
            layout="3UP"
            gutter="24px"
            surface="light"
            paginationInset="12px"
            paginationDisplay="onHover"
            data={data}
            renderItem={({ eyebrow, title, badge, subtitle, img, buttonData, id, ariaLabel }) => (
              <div
                key={id}
                aria-label={ariaLabel}
                style={{
                  backgroundColor: 'white',
                  height: '300px',
                  width: '100%',
                  borderRadius: '12px',
                  padding: '16px',
                  boxSizing: 'border-box',
                  cursor: 'pointer',
                  display: 'flex',
                  flexDirection: 'column',
                  justifyContent: 'space-between'
                }}
              >
                {/* Eyebrow Text */}
                <div style={{ color: 'grey', fontSize: '14px' }}>{eyebrow.children}</div>

                {/* Badge (Red fill, white text) */}
                <div
                  style={{
                    backgroundColor: 'red',
                    color: 'white',
                    padding: '4px 8px',
                    borderRadius: '8px',
                    fontSize: '12px',
                    alignSelf: 'flex-start'
                  }}
                >
                  {badge.children}
                </div>

                {/* Title (Bold text) */}
                <div style={{ fontWeight: 'bold', fontSize: '18px' }}>{title.children}</div>

                {/* Subtitle */}
                <div style={{ fontSize: '14px', color: 'grey' }}>{subtitle.children}</div>

                {/* Image */}
                {img && <img alt={title.children} src={img.src} style={{ width: '100%', height: 'auto', borderRadius: '8px', marginTop: '8px' }} />}

                {/* Button Group */}
                {buttonData && (
                  <div>
                    {buttonData.map((button, index) => (
                      <button
                        key={index}
                        onClick={button.onClick}
                        style={{
                          padding: '8px 16px',
                          fontSize: '14px',
                          marginTop: '8px',
                          backgroundColor: button.use === "secondary" ? 'gray' : 'blue',
                          color: 'white',
                          borderRadius: '4px',
                        }}
                      >
                        {button.children}
                      </button>
                    ))}
                  </div>
                )}
              </div>
            )}
          />
        </div>
      </div>
    </OuterDiv>
  );
};

export default myClickABC;
