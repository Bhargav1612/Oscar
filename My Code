const handleClick = (reccomendUrl, processMtn) => {
  if (!reccomendUrl || !processMtn) return; // Prevents errors if values are missing
  const url = `${domainurl(window.location.hostname)}/${reccomendUrl}?intent=EUP&nHash=${processMtn.slice(-4)}&entrypoint=SRCH`;
  window.location.href = url;
};

onClick: () => handleClick(device.reccomendUrl, device.processMtn),
onClick={button.onClick}

const MyClickABC = ({ reccomendDevices }) => {
  const handleClick = (reccomendUrl, processMtn) => {
    window.location.href = `${domainurl(window.location.hostname)}/${reccomendUrl}?intent=EUP&nHash=${processMtn.slice(-4)}&entrypoint=SRCH`;
  };

  return (
    <OuterDiv>
      <div className="update-container">
        <div className="update-title">
          <Title size="large" bold>
            Update your device
          </Title>
        </div>
      </div>

      {/* Carousel Component */}
      <div className="carousel">
        <Carousel
          peek="standard"
          layout={layout}  // Responsive layout switch
          gutter="24px"
          surface="light"
          paginationInset="12px"
          paginationDisplay="onHover"
          data={reccomendDevices.map((device, index) => ({
            eyebrow: { size: "bodyLarge", children: "Update here" },
            title: { size: "titleSmall", primitive: 'h1', children: `${device.currentbrand}` },
            badge: { children: `${device.amount}` },
            subtitle: { size: "titleSmall", primitive: 'h1', children: `${device.productname}` },
            img: { src: formImageurl(device.imageurl, 'light') },
            buttonData: [{ children: "Click", size: "large", use: "secondary", onClick: () => handleClick(device.reccomendUrl, device.processMtn) }],
          }))}
          renderItem={({ eyebrow, title, badge, subtitle, img, buttonData, id, ariaLabel }) => (
            <TileContainer key={id} aria-label={ariaLabel}>
              {/* Left Section (Text content) */}
              <ContentWrapper>
                <div className="eyebrow-badge">
                  <Body size={eyebrow.size} color="grey">{eyebrow.children}</Body>
                  <div style={{
                    backgroundColor: 'red',
                    color: 'white',
                    padding: '4px 8px',
                    borderRadius: '8px',
                    fontSize: '12px',
                    alignSelf: 'flex-start',
                  }}>
                    {badge.children}
                  </div>
                </div>

                {/* Title */}
                <Title size={title.size} primitive={title.primitive} bold className="title">
                  {title.children}
                </Title>

                {/* Subtitle */}
                <Body size={subtitle.size} primitive={subtitle.primitive} className="subtitle">
                  {subtitle.children}
                </Body>

                {/* Button Group */}
                {buttonData && (
                  <div>
                    {buttonData.map((button, index) => (
                      <button
                        key={index}
                        onClick={button.onClick}
                        style={{
                          padding: '8px 16px',
                          fontSize: '14px',
                          marginTop: '8px',
                          backgroundColor: button.use === "secondary" ? 'gray' : 'blue',
                          color: 'white',
                          borderRadius: '4px',
                        }}
                      >
                        {button.children}
                      </button>
                    ))}
                  </div>
                )}
              </ContentWrapper>

              {/* Right Section (Image) */}
              <ImageWrapper>
                {img && <img alt={title.children} src={img.src} />}
              </ImageWrapper>
            </TileContainer>
          )}
        />
      </div>
    </OuterDiv>
  );
};
