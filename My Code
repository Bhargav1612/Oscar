{(props.reccomendDevices?.length ? props.reccomendDevices : mockDevices.recommendedDevices).map((device, index) => (

import React from 'react';
import { Body, Title, Button } from '@vxx/buttons';
import styled from 'styled-components';
import { domainurl } from '../../helper';
import { formImageurl } from '../auto/utils';
import useEmblaCarousel from 'embla-carousel-react';

const OuterDiv = styled.div`
  padding: 16px 24px;
  border: 1px 0px 1px 0px;
  display: flex;
  flex-direction: column;

  .carousel-container {
    overflow: hidden;
    margin-top: 10px;
  }

  .embla {
    display: flex;
  }

  .embla__slide {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: white;
    height: 200px;
    width: 100%;
    border-radius: 12px;
    padding: 16px;
  }

  .tile-content {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .tile-image {
    height: 100%;
    max-width: 40%;
    object-fit: cover;
    border-radius: 12px;
  }
`;

const myClickABC = (props) => {
  const { mtn, imageurl, productname, currentname, currentbrand, amount } = props;
  const buttonname = "Update";
  const handleClick = () => {
    window.location.href = `${domainurl(window.location.hostname)}/${props.reccomendUrl}?intent=EUP&nHash=${props.processMtn.slice(-4)}&entrypoint=SRCH`;
  };

  const [emblaRef] = useEmblaCarousel();

  return (
    <OuterDiv>
      <div className="update-container">
        <div className="update-title">
          <Title size="large" bold>
            Update to {productname}
          </Title>
        </div>
        {mtn && (
          <Body size="large" color="#000000">
            Hi here u can use ${amount} for ${currentbrand} for {mtn.slice(0, 3)}-{mtn.slice(3, 6)}-{mtn.slice(6)}
          </Body>
        )}
      </div>
      <div className="carousel-container" ref={emblaRef}>
        <div className="embla">
          {props.reccomendDevices?.map((device, index) => (
            <div key={index} className="embla__slide">
              <div className="tile-content">
                <Title size="medium" bold>{device.productname}</Title>
                <Body size="small">Brand: {device.currentbrand}</Body>
                <Body size="small">Amount: ${device.amount}</Body>
                <Button size="large" disabled={false} use="primary" data-customname={`my_click:${buttonname}`} onClick={handleClick}>Update</Button>
              </div>
              <img className="tile-image" src={formImageurl(device.imageurl, 'light')} alt={device.productname} />
            </div>
          ))}
        </div>
      </div>
    </OuterDiv>
  );
};

export default myClickABC;







<div className="guided-container">
  <style>
    {`
    .guided-container {
      text-align: center;
      font-family: Arial, sans-serif;
      margin-top: 50px;
    }

    .button-group {
      margin-top: 20px;
    }

    .guide-button {
      border: 2px solid black;
      background: white;
      color: black;
      padding: 10px 20px;
      margin: 5px;
      font-size: 16px;
      cursor: pointer;
    }
    `}
  </style>

  <h2>What are you looking for?</h2>
  <div className="button-group">
    <button className="guide-button">Apple</button>
    <button className="guide-button">Bat</button>
    <button className="guide-button">Cat</button>
    <button className="guide-button">Dog</button>
  </div>
</div>
