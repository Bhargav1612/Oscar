<div className="guided-container">
  <style>
    {`
    .guided-container {
      text-align: center;
      font-family: Arial, sans-serif;
      margin-top: 50px;
    }

    .button-group {
      margin-top: 20px;
    }

    .guide-button {
      border: 2px solid black;
      background: white;
      color: black;
      padding: 10px 20px;
      margin: 5px;
      font-size: 16px;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    .guide-button.selected {
      background: black;
      color: white;
    }
    `}
  </style>

  {step === 1 ? (
    <>
      <h2>What are you looking for?</h2>
      <div className="button-group">
        {["Apple", "Bat", "Cat", "Dog"].map((item) => (
          <button
            key={item}
            className={`guide-button ${selected === item ? "selected" : ""}`}
            onClick={() => {
              setSelected(item);
              setTimeout(() => setStep(2), 2000);
            }}
          >
            {item}
          </button>
        ))}
      </div>
    </>
  ) : (
    <>
      <h2>Thanks for coming</h2>
      <div className="button-group">
        {["A", "B", "C", "D"].map((item) => (
          <button key={item} className="guide-button">
            {item}
          </button>
        ))}
      </div>
    </>
  )}
</div>








<div className="guided-container">
  <style>
    {`
    .guided-container {
      text-align: center;
      font-family: Arial, sans-serif;
      margin-top: 50px;
    }

    .button-group {
      margin-top: 20px;
    }

    .guide-button {
      border: 2px solid black;
      background: white;
      color: black;
      padding: 10px 20px;
      margin: 5px;
      font-size: 16px;
      cursor: pointer;
    }
    `}
  </style>

  <h2>What are you looking for?</h2>
  <div className="button-group">
    <button className="guide-button">Apple</button>
    <button className="guide-button">Bat</button>
    <button className="guide-button">Cat</button>
    <button className="guide-button">Dog</button>
  </div>
</div>




import React, { useState } from "react";
import "./App.css";
import Guide from "./Guide";

export default function App() {
  return <Guide />;
}


import React, { useState } from "react";

export default function Guide() {
  const [step, setStep] = useState(1);
  const [selected, setSelected] = useState(null);
  const [clickedButton, setClickedButton] = useState(null);

  const handleFirstClick = (item) => {
    setClickedButton(item);
    setTimeout(() => {
      setSelected(item);
      setStep(2);
      setClickedButton(null);
    }, 2000);
  };

  const handleClearFilters = () => {
    setSelected(null);
    setStep(1);
  };

  return (
    <div className="container">
      {step === 1 ? (
        <div className="content">
          <h2>What are you looking for?</h2>
          <div className="button-group">
            {["Apple", "Bat", "Cat", "Dog"].map((item) => (
              <button
                key={item}
                className={`btn ${clickedButton === item ? "active" : ""}`}
                onClick={() => handleFirstClick(item)}
                disabled={clickedButton !== null}
              >
                {item}
              </button>
            ))}
          </div>
        </div>
      ) : (
        <div className="content">
          <h2>Thanks for coming</h2>
          <div className="button-group">
            {["A", "B", "C", "D"].map((item) => (
              <button key={item} className="btn">
                {item}
              </button>
            ))}
          </div>
          {selected && (
            <div className="filter-bar">
              <span className="selected-item">
                {selected} <span className="close" onClick={handleClearFilters}>x</span>
              </span>
              <span className="clear" onClick={handleClearFilters}>Clear Filters</span>
            </div>
          )}
        </div>
      )}
    </div>
  );
}




.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  text-align: center;
}

.button-group {
  margin-top: 10px;
}

.btn {
  margin: 5px;
  padding: 10px 20px;
  border: 2px solid black;
  background-color: white;
  color: black;
  cursor: pointer;
  font-size: 16px;
}

.btn:hover {
  background-color: lightgray;
}

.filter-bar {
  margin-top: 15px;
}

.selected-item {
  display: inline-block;
  padding: 5px 10px;
  border: 2px solid gray;
  color: gray;
  font-size: 14px;
  margin-right: 10px;
  position: relative;
}

.close {
  margin-left: 8px;
  cursor: pointer;
  font-weight: bold;
}

.clear {
  text-decoration: underline;
  cursor: pointer;
  color: blue;
}
.btn.active {
  background-color: black;
  color: white;
  border-color: black;
}


